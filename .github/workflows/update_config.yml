name: Update Config Options

on:
  workflow_dispatch:
    inputs:
      case_code:
        description: "Validation Case Code"
        required: true
        type: string

jobs:
  update-config:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download config options
        uses: actions/download-artifact@v4
        with:
          name: config-options
          path: .

      - name: Read config options
        id: config-options
        run: |
          echo "CONFIG_KEYS=$(cat config_options.json)" >> $GITHUB_OUTPUT

      - name: Generate input form
        run: |
          # Create a temporary workflow file with dynamic inputs
          cat <<EOF > dynamic_workflow.yml
          name: Dynamic Config Update
          on:
            workflow_dispatch:
              inputs:
                case_code:
                  default: "${{ inputs.case_code }}"
                  type: string
                  required: true
          $(jq -r '.[] | "                \(.):\n                  description: \"Set value for \(.)\"\n                  required: false\n                  type: string"' config_options.json)
          EOF

          # Create a new workflow dispatch event
          gh workflow run dynamic_workflow.yml \
            --ref main \
            -f case_code="${{ inputs.case_code }}"

      - name: Modify config file
        run: |
          CONFIG_PATH="VandV/${{ inputs.case_code }}/config_sa_restart.cfg"
          TMP_FILE=$(mktemp)

          # Get all inputs except case_code
          INPUT_KEYS=$(jq -r '.[]' config_options.json)

          # Process each line of the config file
          while IFS= read -r line; do
            if [[ "$line" =~ ^[^#%].*= ]]; then
              key=$(echo "$line" | awk -F '=' '{print $1}' | sed 's/ *$//')
              if echo "$INPUT_KEYS" | grep -q "^$key$"; then
                value=$(jq -r --arg key "$key" '.inputs[$key]' "$GITHUB_EVENT_PATH")
                if [ "$value" != "null" ] && [ -n "$value" ]; then
                  echo "$key = $value" >> "$TMP_FILE"
                  continue
                fi
              fi
            fi
            echo "$line" >> "$TMP_FILE"
          done < "$CONFIG_PATH"

          mv "$TMP_FILE" "$CONFIG_PATH"

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add "VandV/${{ inputs.case_code }}/config_sa_restart.cfg"
          git commit -m "Update config for ${{ inputs.case_code }} case"
          git push
