name: Select Validation Case

on:
  workflow_dispatch:
    inputs:
      case_code:
        description: "Enter the Validation Case Code (e.g., 2DZP)"
        required: true
        type: string

jobs:
  generate-inputs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Parse config file
        id: parse-config
        run: |
          CONFIG_PATH="VandV/${{ inputs.case_code }}/config_sa_restart.cfg"
          if [ ! -f "$CONFIG_PATH" ]; then
            echo "::error::Config file not found at $CONFIG_PATH"
            exit 1
          fi

          # Create directory for artifacts
          mkdir -p artifacts

          # Create a JSON file with all config options
          grep -E '^[^#%].*=' "$CONFIG_PATH" | awk -F '=' '{print $1}' | sed 's/ *$//' | jq -R -s -c 'split("\n") | map(select(length > 0))' > artifacts/config_options.json

          # Also save the case code and config path
          echo "${{ inputs.case_code }}" > artifacts/case_code.txt
          echo "$CONFIG_PATH" > artifacts/config_path.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: config-data-${{ github.run_id }}
          path: artifacts/
          retention-days: 1

      - name: Trigger update workflow
        uses: actions/github-script@v6
        with:
          script: |
            try {
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'update_config.yml',
                ref: 'main',
                inputs: {
                  case_code: '${{ inputs.case_code }}',
                  artifact_name: 'config-data-${{ github.run_id }}'
                }
              });
            } catch (error) {
              core.error(`Failed to trigger workflow: ${error}`);
              throw error;
            }
