name: Update Config Options

on:
  workflow_dispatch:
    inputs:
      case_code:
        description: "Validation Case Code"
        required: true
        type: string
      artifact_name:
        description: "Name of the artifact to download"
        required: true
        type: string

jobs:
  update-config:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: artifacts/

      - name: Read config data
        id: read-config
        run: |
          echo "CASE_CODE=$(cat artifacts/case_code.txt)" >> $GITHUB_ENV
          echo "CONFIG_PATH=$(cat artifacts/config_path.txt)" >> $GITHUB_ENV
          echo "CONFIG_KEYS=$(cat artifacts/config_options.json)" >> $GITHUB_ENV

      - name: Generate dynamic inputs
        id: generate-inputs
        run: |
          # Install jq if not already installed
          sudo apt-get -y install jq

          # Generate inputs for GitHub CLI
          INPUT_ARGS=""
          while IFS= read -r key; do
            INPUT_ARGS+=" -f $key=''"
          done <<< "$(jq -r '.[]' artifacts/config_options.json)"

          # Store the command for later use
          echo "INPUT_CMD=\"gh workflow run dynamic_config.yml --ref main -f case_code=\\\"${{ env.CASE_CODE }}\\\"$INPUT_ARGS\"" >> $GITHUB_ENV

      - name: Create dynamic workflow
        run: |
          cat <<EOF > .github/workflows/dynamic_config.yml
          name: Dynamic Config Update
          on:
            workflow_dispatch:
              inputs:
                case_code:
                  description: "Validation Case Code"
                  required: true
                  type: string
          $(jq -r '.[] | "                \(.):\n                  description: \"Set value for \(.)\"\n                  required: false\n                  type: string"' artifacts/config_options.json)
          jobs:
            update-config:
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v4
                - run: echo "Configuration updated for ${{ env.CASE_CODE }}"
          EOF

      - name: Run dynamic workflow
        run: |
          eval "${{ env.INPUT_CMD }}"

      - name: Clean up artifact
        if: always()
        run: |
          gh api \
            --method DELETE \
            "/repos/${{ github.repository }}/actions/artifacts/$(gh api /repos/${{ github.repository }}/actions/artifacts | jq -r ".artifacts[] | select(.name == \"${{ inputs.artifact_name }}\") | .id")"
