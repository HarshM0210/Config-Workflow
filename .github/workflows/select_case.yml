name: Select Validation Case

on:
  workflow_dispatch:
    inputs:
      case_code:
        description: "Enter the Validation Case Code (e.g., 2DZP)"
        required: true
        type: string

jobs:
  generate-inputs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Parse config file
        id: parse-config
        run: |
          CONFIG_PATH="VandV/${{ github.event.inputs.case_code }}/config_sa_restart.cfg"
          if [ ! -f "$CONFIG_PATH" ]; then
            echo "::error::Config file not found at $CONFIG_PATH"
            exit 1
          fi

          # Create a clean list of config keys
          echo "CONFIG_KEYS=$(grep -E '^[^#%].*=' "$CONFIG_PATH" | awk -F '=' '{print $1}' | sed 's/ *$//' | jq -R -s -c 'split("\n") | map(select(length > 0))')" >> $GITHUB_ENV

      - name: Trigger update workflow
        uses: actions/github-script@v6
        with:
          script: |
            const core = require('@actions/core');
            try {
              const configKeys = JSON.parse(process.env.CONFIG_KEYS);
              const inputs = {
                case_code: '${{ github.event.inputs.case_code }}'
              };
              
              // Add all config options as potential inputs
              configKeys.forEach(key => {
                if (key && key.trim()) {
                  inputs[key.trim()] = '';
                }
              });
              
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'update_config.yml',
                ref: 'main',
                inputs: inputs
              });
            } catch (error) {
              core.setFailed(`Failed to trigger workflow: ${error.message}`);
            }
