name: Update Config Options

on:
  workflow_dispatch:
    inputs:
      case_code:
        description: "Validation Case Code"
        required: true
        type: string

jobs:
  prepare-inputs:
    runs-on: ubuntu-latest
    outputs:
      config_path: ${{ steps.set-outputs.outputs.config_path }}
      case_code: ${{ steps.set-outputs.outputs.case_code }}
    steps:
      - uses: actions/checkout@v4

      - name: Load cached config data
        id: set-outputs
        run: |
          CASE_CODE="${{ inputs.case_code }}"
          CACHE_DIR=".ci/cache/$CASE_CODE"

          if [ ! -f "$CACHE_DIR/original_config.cfg" ]; then
            echo "::error::Cached config not found for $CASE_CODE"
            exit 1
          fi

          CONFIG_PATH=$(cat "$CACHE_DIR/config_path.txt")

          echo "config_path=$CONFIG_PATH" >> $GITHUB_OUTPUT
          echo "case_code=$CASE_CODE" >> $GITHUB_OUTPUT
          echo "CONFIG_PATH=$CONFIG_PATH" >> $GITHUB_ENV
          echo "CASE_CODE=$CASE_CODE" >> $GITHUB_ENV

  generate-ui:
    needs: prepare-inputs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create UI instructions
        run: |
          echo "##[group]Configuration Update Instructions"
          echo "Too many configuration options to display in GitHub UI (64 options found)."
          echo "Please edit the following file directly in your repository:"
          echo "${{ needs.prepare-inputs.outputs.config_path }}"
          echo ""
          echo "After making changes, commit them and they will be used in the next steps."
          echo "##[endgroup]"

          # Create a markdown file with all options for reference
          CASE_CODE="${{ needs.prepare-inputs.outputs.case_code }}"
          CACHE_DIR=".ci/cache/$CASE_CODE"
          CONFIG_OPTIONS=$(cat "$CACHE_DIR/config_options.json")

          echo "# Configuration Options for $CASE_CODE" > CONFIG_OPTIONS.md
          echo "| Option | Current Value |" >> CONFIG_OPTIONS.md
          echo "|--------|---------------|" >> CONFIG_OPTIONS.md

          while read -r option; do
            value=$(grep -E "^$option *=" "${{ needs.prepare-inputs.outputs.config_path }}" | cut -d'=' -f2- | xargs)
            echo "| $option | $value |" >> CONFIG_OPTIONS.md
          done < <(echo "$CONFIG_OPTIONS" | jq -r '.[]')

          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add CONFIG_OPTIONS.md
          git commit -m "Add config options reference for $CASE_CODE" || echo "No changes to commit"
          git push

  wait-for-update:
    needs: generate-ui
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Wait for config update
        run: |
          echo "Waiting for manual update of the config file..."
          echo "Please edit ${{ needs.prepare-inputs.outputs.config_path }} and commit changes"
          echo "This job will wait for 5 minutes before timing out"
          sleep 300

  verify-update:
    needs: wait-for-update
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Verify changes
        run: |
          CONFIG_PATH="${{ needs.prepare-inputs.outputs.config_path }}"
          CASE_CODE="${{ needs.prepare-inputs.outputs.case_code }}"
          CACHE_DIR=".ci/cache/$CASE_CODE"

          # Check if any REPLACE_ME values remain
          if grep -q "REPLACE_ME" "$CONFIG_PATH"; then
            echo "::error::Some configuration options still contain placeholder values"
            grep "REPLACE_ME" "$CONFIG_PATH"
            exit 1
          fi

          # Compare with original
          if diff -q "$CONFIG_PATH" "$CACHE_DIR/original_config.cfg"; then
            echo "::error::No changes detected in configuration file"
            exit 1
          fi

          echo "Configuration updated successfully"
